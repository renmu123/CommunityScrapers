name: AdultEmpire

movieByURL:
  - action: scrapeXPath
    url:
      - adultdvdempire.com
      - adultempire.com
    scraper: movieScraper
sceneByURL:
  - action: scrapeXPath
    url:
      - adultdvdempire.com
      - adultempire.com
    scraper: sceneScraper
sceneByName:
  action: scrapeXPath
  # if needed replace `dvd` with `vod`
  queryURL: https://www.adultdvdempire.com/dvd/search?q={}
  scraper: sceneSearch
sceneByQueryFragment:
  action: scrapeXPath
  queryURL: "{url}"
  scraper: sceneScraper
performerByURL:
  - 
    action: scrapeXPath
    url:
       - adultdvdempire.com
       - adultempire.com
    scraper: performerScraper

xPathScrapers:
  sceneSearch:
    scene:
      Title:
        selector: //div[@class="item-title"]/a/@*[local-name()="href" or local-name()="title"]
        concat: "|"
        postProcess:
          - replace:
            - regex: '/(\d+)/[^|]+\|([^|]+)'
              with: "$2 ($1)"
        split: "|"
      URL:
        selector: //div[@id="content"]//div[@class="item-title"]/a/@href
        postProcess:
          - replace:
              - regex: ^
                with: "https://www.adultdvdempire.com"
      Image:
        selector: //a[@class="boxcover"]/img/@data-src

  movieScraper:
    movie:
      Name: //h1/text()
      Director: //a[@label="Director"]/text()
      Duration:
        selector: //small[contains(text(), "Length")]/following-sibling::text()
        postProcess:
          - replace:
            - regex: " hrs. "
              with: ":"
            - regex: " mins."
              with: ":00"
      Date:
        selector: //small[contains(text(), "Released")]/following-sibling::text()
        postProcess:
          - parseDate: Jan 02 2006
      Synopsis:
        selector: //div[contains(@class,"synopsis-content")]//text()
        concat: " "
      Studio:
        Name: //a[@label="Studio"]/text()
      FrontImage: //a[@id="front-cover"]/@data-href
      BackImage: //a[@id="back-cover"]/@href
      # Rating is not yet implemented in the UX
      # Rating:
      #   selector: //span[@class='rating-stars-avg']/text()
      #   postProcess:
      #     - replace:
      #       - regex: (\d).+
      #         with: $1
      URL: //meta[@name='og:url']/@content
  sceneScraper:
    scene:
      Title: //h1/text()
      Details:
        selector: //div[contains(@class,"synopsis-content")]//text()
        concat: " "
      Date:
        selector: //small[contains(text(), "Released")]/following-sibling::text()
        postProcess:
          - parseDate: Jan 02 2006
      Director: //a[@label="Director"]/text()    
      Image: //a[@id="front-cover"]/@data-href
      Studio:
        Name: //a[@label="Studio"]/text()
      Movies:
        Name: //h1/text()
        URL: //link[@rel="canonical"]/@href
      Tags:
        Name: //div[h2[contains(.,'Categories')]]//a[@label="Category"]/text()
      Performers:
        Name: //a[@label="Performer"]//text()
        URL:
          selector: //a[@label="Performer"]/@href
          postProcess:
            - replace:
                - regex: ^
                  with: "https://www.adultdvdempire.com"
      URL: //meta[@name='og:url']/@content
  performerScraper:
    common:
      $infoPiece: //*[@id="profileModal"]/div/div/div[2]/div[1]/ul
    performer:
      Name: //*[@id="content"]/section/div/div[2]/h1/text()
      Birthdate:
        selector: $infoPiece/li[contains(text(), 'Born:')]/text()
        postProcess:
          - replace:
              - regex: Born:\s+(.*)
                with: $1
      Height:
        selector: $infoPiece/li[contains(text(), 'Height:')]/text()
        postProcess:
          - replace:
              - regex: Height:\s+(.*)
                with: $1
          - feetToCm: true
      Image: //*[@id="content"]/section/div/div[1]/a[1]|/img/@src|//*[@id="content"]/section/div/div[1]/img/@src
      Country:
        selector: $infoPiecel/li[contains(text(), 'From:')]/text()
        postProcess:
          - replace:
              - regex: From:\s+(.*)
                with: $1
      Measurements:
        selector: $infoPiece/li[contains(text(), 'Measurements:')]/text()
        postProcess:
          - replace:
              - regex: Measurements:\s+(\d\d\w*)\D+(\d+)\D+(\d+).*
                with: $1-$2-$3
      Aliases:
        selector: //*[@id="content"]/section/div/div[2]/div[contains(text(), "Alias:")]
        concat: ", "
        postProcess:
          - replace:
              - regex: "Alias: (.*)"
                with: $1
      Details: //*[@id="content"]/section/div/div[5]/aside/text()
      URL: //link[@rel='canonical']/@href
# Last Updated December 07, 2023
